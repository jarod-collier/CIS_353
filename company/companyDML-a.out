SQL> -- ---------------------------------------------------------------
SQL> --
SQL> -- Name: Jarod Collier
SQL> --
SQL> -- ------------------------------------------------------------
SQL> -- NULL AND SUBSTRINGS -------------------------------
SQL> --
SQL> /*(10A)
SQL> Find the ssn and last name of every employee who doesn't have a
SQL> supervisor, or his last name contains at least two occurences of the letter 'a'.
SQL> Sort the results by ssn.
SQL> */
SQL> SELECT ssn, lname
  2  FROM employee
  3  WHERE lname LIKE '%a%a%' OR super_ssn is NULL
  4  ORDER BY ssn;

SSN       LNAME                                                                 
--------- ---------------                                                       
666884444 Narayan                                                               
888665555 Borg                                                                  
987654321 Wallace                                                               
987987987 Jabbar                                                                
999887777 Zelaya                                                                

SQL> --
SQL> -- JOINING 3 TABLES ------------------------------
SQL> --
SQL> /*(11A)
SQL> For every employee who works more than 30 hours on any project:
SQL> Find the ssn, lname, project number, project name, and numer of hours.
SQL>  Sort the results by ssn.
SQL> */
SQL> SELECT ssn, lname, pnumber, pname, hours
  2  FROM employee e, project p, works_on w
  3  WHERE w.hours > 30 AND e.ssn = w.essn AND w.pno = p.pnumber
  4  ORDER BY ssn;

SSN       LNAME              PNUMBER PNAME                HOURS                 
--------- --------------- ---------- --------------- ----------                 
123456789 Smith                    1 ProductX              32.5                 
666884444 Narayan                  3 ProductZ                40                 
987987987 Jabbar                  10 Computerization         35                 

SQL> --
SQL> -- JOINING 3 TABLES ---------------------------
SQL> --
SQL> /*(12A)
SQL> Write a query that consists of one block only.
SQL> For every employee who works on a project that is not controlled
SQL> by the department he works for: Find the employee's lname, the
SQL> department he works for, the project number that he works on, and the
SQL> number of the department that controls that project. Sort the results by lname.
SQL> */
SQL> SELECT lname, dno, pnumber, dnum
  2  FROM employee e, project p, works_on w
  3  WHERE e.ssn = w.essn AND w.pno = p.pnumber AND e.dno != p.dnum
  4  ORDER BY lname;

LNAME                  DNO    PNUMBER       DNUM                                
--------------- ---------- ---------- ----------                                
Wallace                  4         20          1                                
Wong                     5         20          1                                
Wong                     5         10          4                                

SQL> --
SQL> -- JOINING 4 TABLES -------------------------
SQL> --
SQL> /*(13A)
SQL> For every employee who works for more than 20 hours on any project that
SQL> is located in the same location as his department:
SQL> Find the ssn, lname, project number, project location, department number,
SQL> and department location.Sort the results by lname
SQL> */
SQL> SELECT DISTINCT lname, ssn, pnumber, plocation, dnum, dlocation
  2  FROM employee e, project p, works_on w, dept_locations d
  3  WHERE w.hours > 20 AND e.ssn = w.essn AND w.pno = p.pnumber AND 
  4  	   e.dno = p.dnum AND p.plocation = d.dlocation
  5  ORDER BY lname;

LNAME           SSN          PNUMBER PLOCATION             DNUM DLOCATION       
--------------- --------- ---------- --------------- ---------- --------------- 
Jabbar          987987987         10 Stafford                 4 Stafford        
Narayan         666884444          3 Houston                  5 Houston         
Smith           123456789          1 Bellaire                 5 Bellaire        
Zelaya          999887777         30 Stafford                 4 Stafford        

SQL> --
SQL> -- SELF JOIN -------------------------------------------
SQL> --
SQL> /*(14A)
SQL> Write a query that consists of one block only.
SQL> For every employee whose salary is less than 70% of his immediate
SQL> supervisor's salary: Find his ssn, lname, salary; and his
SQL> supervisor's ssn, lname, and salary. Sort the results by ssn.
SQL> */
SQL> SELECT e.ssn, e.lname, e.salary, s.ssn, s.lname, s.salary
  2  FROM employee e, employee s
  3  WHERE e.salary < .7 * s.salary AND e.super_ssn = s.ssn
  4  ORDER BY e.ssn;

SSN       LNAME               SALARY SSN       LNAME               SALARY       
--------- --------------- ---------- --------- --------------- ----------       
453453453 English              25000 333445555 Wong                 40000       
987987987 Jabbar               25000 987654321 Wallace              43000       
999887777 Zelaya               25000 987654321 Wallace              43000       

SQL> --
SQL> -- USING MORE THAN ONE RANGE VARIABLE ON ONE TABLE -------------------
SQL> --
SQL> /*(15A)
SQL> For projects located in Houston: Find pairs of last names such that
SQL> the two employees in the pair work on the same project. Remove duplicates.
SQL> Sort the result by the lname in the left column in the result.
SQL> */
SQL> SELECT DISTINCT e1.lname, e2.lname
  2  FROM employee e1, employee e2, works_on w1, works_on w2, project p
  3  WHERE e1.ssn = w1.essn AND e2.ssn = w2.essn AND w1.pno = w2.pno AND
  4  	   p.plocation = 'Houston' AND w1.pno = p.pnumber AND
  5  	   w2.pno = p.pnumber AND  e1.ssn < e2.ssn
  6  ORDER BY e1.lname;

LNAME           LNAME                                                           
--------------- ---------------                                                 
Borg            Wallace                                                         
Wong            Borg                                                            
Wong            Narayan                                                         
Wong            Wallace                                                         

SQL> --
SQL> ------------------------------------
SQL> --
SQL> /*(16A) Hint: A NULL in the hours column should be considered as zero hours.
SQL> Find the ssn, lname, and the total number of hours worked on projects for
SQL> every employee whose total is less than 40 hours. Sort the result by lname
SQL> */
SQL> SELECT  e.lname, e.ssn, COALESCE(SUM(w.hours),0)
  2  FROM employee e, works_on w
  3  WHERE e.ssn = w.essn
  4  GROUP BY e.lname, e.ssn
  5  HAVING COALESCE(SUM(w.hours),0) < 40;

LNAME           SSN       COALESCE(SUM(W.HOURS),0)                              
--------------- --------- ------------------------                              
Borg            888665555                        0                              
Wallace         987654321                       35                              

SQL> ------------------------------------
SQL> --
SQL> /*(17A)
SQL> For every project that has more than 2 employees working on it:
SQL> Find the project number, project name, number of employees working on it,
SQL> and the total number of hours worked by all employees on that project.
SQL> Sort the results by project number.
SQL> */
SQL> SELECT p.pnumber, p.pname, COUNT(*), COALESCE(SUM(w.hours),0)
  2  FROM works_on w, project p
  3  WHERE w.pno = p.pnumber
  4  GROUP BY p.pnumber, p.pname
  5  HAVING COUNT(*) > 2
  6  ORDER BY p.pnumber;

   PNUMBER PNAME             COUNT(*) COALESCE(SUM(W.HOURS),0)                  
---------- --------------- ---------- ------------------------                  
         2 ProductY                 3                     37.5                  
        10 Computerization          3                       55                  
        20 Reorganization           3                       25                  
        30 Newbenefits              3                       55                  

SQL> --
SQL> -- CORRELATED SUBQUERY --------------------------------
SQL> --
SQL> /*(18A)
SQL> For every employee who has the highest salary in his department:
SQL> Find the dno, ssn, lname, and salary . Sort the results by department number.
SQL> */
SQL> SELECT e1.dno, e1.ssn, e1.lname, e1.salary
  2  FROM employee e1
  3  WHERE e1.salary = (SELECT	MAX (e2.salary)
  4  					FROM employee e2
  5  					WHERE e1.dno = e2.dno)
  6  ORDER BY e1.dno;

       DNO SSN       LNAME               SALARY                                 
---------- --------- --------------- ----------                                 
         1 888665555 Borg                 55000                                 
         4 987654321 Wallace              43000                                 
         5 333445555 Wong                 40000                                 

SQL> --
SQL> -- NON-CORRELATED SUBQUERY -------------------------------
SQL> --
SQL> /*(19A)
SQL> For every employee who does not work on any project that is located in
SQL> Houston: Find the ssn and lname. Sort the results by lname
SQL> */
SQL> SELECT e.lname, e.ssn
  2  FROM employee e
  3  WHERE e.ssn NOT IN (SELECT w.essn
  4  			     	 FROM works_on w, project p
  5  			     	 WHERE w.pno = p.pnumber AND p.plocation = 'Houston')
  6  ORDER BY e.lname;

LNAME           SSN                                                             
--------------- ---------                                                       
English         453453453                                                       
Jabbar          987987987                                                       
Smith           123456789                                                       
Zelaya          999887777                                                       

SQL> --
SQL> -- DIVISION ---------------------------------------------
SQL> --
SQL> /*(20A) Hint: This is a DIVISION query
SQL> For every employee who works on every project that is located in Stafford:
SQL> Find the ssn and lname. Sort the results by lname
SQL> */
SQL> SELECT e.lname, e.ssn
  2  FROM employee e
  3  WHERE NOT EXISTS ((SELECT p.pnumber
  4  			        FROM project p
  5  			        WHERE  p.plocation = 'Stafford')
  6  			        MINUS
  7  			       (SELECT p.pnumber
  8  			        FROM project p, works_on w
  9  			        WHERE w.essn = e.ssn AND
 10  				    	  w.pno = p.pnumber AND
 11  				    	  p.plocation = 'Stafford'))
 12  ORDER BY e.lname;

LNAME           SSN                                                             
--------------- ---------                                                       
Jabbar          987987987                                                       
Zelaya          999887777                                                       

SQL> --
SQL> SET ECHO OFF
